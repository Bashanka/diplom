# Generated by Django 2.1.3 on 2018-12-05 20:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import stalmap.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Название')),
                ('begin', models.DateField(verbose_name='Начало')),
                ('end', models.DateField(verbose_name='Конец')),
            ],
        ),
        migrations.CreateModel(
            name='ActionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='ArchComplex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
            ],
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Название')),
            ],
        ),
        migrations.CreateModel(
            name='DataType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='GeoMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Название')),
                ('file', models.FileField(upload_to=stalmap.models.user_directory_geomap_path, verbose_name='Файл')),
                ('scale', models.FloatField(verbose_name='Масштаб')),
                ('longitude', models.FloatField(verbose_name='Долгота')),
                ('latitude', models.FloatField(verbose_name='Широта')),
            ],
        ),
        migrations.CreateModel(
            name='HistoryAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Название')),
                ('begin', models.DateField(verbose_name='Начало')),
                ('end', models.DateField(verbose_name='Конец')),
                ('description', models.TextField(verbose_name='Описание')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.Action', verbose_name='Событие')),
            ],
        ),
        migrations.CreateModel(
            name='HistoryEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Название')),
                ('begin', models.DateField(verbose_name='Начало')),
                ('end', models.DateField(verbose_name='Конец')),
                ('file', models.FileField(upload_to=stalmap.models.user_directory_historyevent_path, verbose_name='Файл')),
                ('description', models.TextField(verbose_name='Описание')),
                ('geoMap', models.ManyToManyField(blank=True, to='stalmap.GeoMap', verbose_name='Карта')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='stalmap.HistoryEvent', verbose_name='Историческое событие')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Название')),
                ('image', models.ImageField(upload_to=stalmap.models.user_directory_image_path, verbose_name='Изображение')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Leader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Имя')),
                ('biography', models.TextField(verbose_name='Биография')),
                ('file', models.FileField(upload_to='', verbose_name='Файл')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='MapObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coordinates', models.TextField(verbose_name='Координаты')),
                ('address', models.TextField(verbose_name='Адрес')),
                ('description', models.TextField(verbose_name='Описание')),
                ('geoMap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.GeoMap', verbose_name='Карта')),
            ],
        ),
        migrations.CreateModel(
            name='MapObjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='MapType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Название')),
                ('marker', models.BooleanField(default=False, verbose_name='Маркер')),
                ('description', models.TextField(verbose_name='Описание')),
                ('file', models.FileField(upload_to=stalmap.models.user_directory_model_path, verbose_name='Модель')),
                ('image', models.ManyToManyField(blank=True, to='stalmap.Image')),
                ('mapObject', models.ManyToManyField(blank=True, to='stalmap.MapObject', verbose_name='Объект карты')),
            ],
        ),
        migrations.CreateModel(
            name='ModelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Тип модели')),
                ('description', models.TextField(verbose_name='Описание')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Название')),
                ('historyEvent', models.ManyToManyField(blank=True, to='stalmap.HistoryEvent', verbose_name='Историческое событие')),
                ('mapObject', models.ManyToManyField(blank=True, to='stalmap.MapObject', verbose_name='Объект карты')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Название')),
                ('image', models.ImageField(upload_to=stalmap.models.user_directory_photo_path, verbose_name='Изображение')),
                ('description', models.TextField(verbose_name='Описание')),
                ('downloadCount', models.IntegerField(default=0, verbose_name='Количество скачиваний')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='PhotoDownload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.TextField(max_length=50, verbose_name='IP')),
                ('photo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.Photo', verbose_name='Фото')),
            ],
        ),
        migrations.CreateModel(
            name='Scene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('archComplex', models.ManyToManyField(to='stalmap.ArchComplex', verbose_name='Архитектурные комплексы')),
                ('model', models.ManyToManyField(to='stalmap.Model', verbose_name='Модели')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Имя')),
                ('description', models.TextField(verbose_name='Описание')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='UnitHead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', models.DateField(verbose_name='Начало')),
                ('end', models.DateField(verbose_name='Конец')),
                ('leader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.Leader', verbose_name='Лидер')),
            ],
        ),
        migrations.CreateModel(
            name='UnitType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Имя')),
                ('description', models.TextField(verbose_name='Описание')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stalmap.UnitType', verbose_name='Состоит в')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='WarUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.State')),
                ('unitType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.UnitType', verbose_name='Тип военного подразделения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.AddField(
            model_name='unithead',
            name='unitType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.UnitType', verbose_name='Тип военного подразделения'),
        ),
        migrations.AddField(
            model_name='unithead',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='unithead',
            name='warUnit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.WarUnit', verbose_name='Военное подразделение'),
        ),
        migrations.AddField(
            model_name='participant',
            name='warUnit',
            field=models.ManyToManyField(blank=True, to='stalmap.WarUnit', verbose_name='Военное подразделение'),
        ),
        migrations.AddField(
            model_name='model',
            name='modelType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.ModelType', verbose_name='Тип модели'),
        ),
        migrations.AddField(
            model_name='model',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='mapobject',
            name='mapObjectType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.MapObjectType', verbose_name='Тип объекта карты'),
        ),
        migrations.AddField(
            model_name='mapobject',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='historyaction',
            name='historyEvent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.HistoryEvent', verbose_name='Историческое событие'),
        ),
        migrations.AddField(
            model_name='historyaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='geomap',
            name='mapType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.MapType', verbose_name='Тип карты'),
        ),
        migrations.AddField(
            model_name='geomap',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='data',
            name='dataType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.DataType', verbose_name='Тип данных'),
        ),
        migrations.AddField(
            model_name='data',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='archcomplex',
            name='model',
            field=models.ManyToManyField(to='stalmap.Model', verbose_name='Модели'),
        ),
        migrations.AddField(
            model_name='archcomplex',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='action',
            name='actionType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.ActionType', verbose_name='Тип события'),
        ),
        migrations.AddField(
            model_name='action',
            name='data',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stalmap.Data', verbose_name='Данные'),
        ),
        migrations.AddField(
            model_name='action',
            name='participant',
            field=models.ManyToManyField(blank=True, to='stalmap.Participant', verbose_name='Участники'),
        ),
        migrations.AddField(
            model_name='action',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
    ]
